# 1. 1차원 배열 구간합.

arr = {3, 5, 7, 1, 4};
psum = {3, 7, 15, 16, 20}; // 누적합
psum[j] - psum[i-1];       // arr[i:j+1] 구간합(i~j) 

#include <stdio.h>
int main(){
    int arr[5] = {3, 5, 7, 1, 4};
    int psum[5];

    // 1. 누적합 : psum[n] = arr[0] + arr[1] + ... arr[n]
    psum[0] = arr[0];
    for (int i=1; i<=5; i++){
        psum[i] = psum[i-1] + arr[i];
    }
    // 2. 구간합(index : 1 ~ 3)
    int i = 1, j = 3;
    int res = psum[j] - psum[i-1];
    printf("%d", res);
}


# 2. 2차원 배열 구간합.
#include <stdio.h>

int main(){
    // 2차원 NxM;
    int arr[3][5];
    int psum[3][5];

    // arr element 입력
    for (int i=1; i<=3; i++){
        for (int j=1; j<=5; j++){
            scanf("%d", arr[i][j]);
        }
    }
    // 누적합
    for (int i=1; i<=3; i++){
        for (int j=1; j<=5; j++){
            psum[i][j] = psum[i-1][j] + psum[i][j-1] - psum[i-1][j-1] + arr[i][j];
        }
    }
    // 구간합((i,j) ~ (x,y))
    int i, j, x, y;
    scanf("%d %d %d %d", &i, &j, &x, &y);
    int res = psum[x][y] - psum[x][j-1] - psum[i-1][y] + psum[i-1][j-1];
}
