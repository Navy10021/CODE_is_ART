큐(Queue)는 데이터를 선입선출(FIFO, First-In-First-Out) 방식으로 저장하는 자료 구조입니다. 이것은 일상 생활에서 줄을 서는 것과 유사한 개념입니다.

C++에서 큐를 사용하려면 `<queue>` 헤더 파일을 포함해야 합니다. 주요한 기능은 다음과 같습니다:

1. **선언**: 큐를 선언합니다.
   ```cpp
   std::queue<DataType> myQueue;
   ```

2. **삽입**: `push()` 함수를 사용하여 요소를 큐에 추가합니다.
   ```cpp
   myQueue.push(data);
   ```

3. **삭제**: `pop()` 함수를 사용하여 큐의 맨 앞 요소를 제거합니다.
   ```cpp
   myQueue.pop();
   ```

4. **가장 앞 요소 접근**: `front()` 함수를 사용하여 큐의 가장 앞 요소에 접근합니다.
   ```cpp
   DataType frontElement = myQueue.front();
   ```

5. **요소 존재 여부 확인**: `empty()` 함수를 사용하여 큐가 비어 있는지 확인합니다.
   ```cpp
   if (!myQueue.empty()) {
       // 큐가 비어 있지 않음
   }
   ```

6. **요소 개수 확인**: `size()` 함수를 사용하여 큐에 있는 요소의 개수를 확인합니다.
   ```cpp
   size_t queueSize = myQueue.size();
   ```

큐는 데이터를 임시로 저장하고 나중에 처리해야 할 때 유용합니다. 예를 들어, 작업이 먼저 들어온 순서대로 처리되어야 할 때나 이벤트 처리나 리소스 관리에 활용될 수 있습니다.